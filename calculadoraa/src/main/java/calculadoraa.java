/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *s
 * @author Edwin Alvarez,Jesus Alvarez,Luis Montiel.
 */
public class calculadoraa extends javax.swing.JFrame {
// Declaración de las variables
    public float primerNumero;// Almacena el primer número ingresado
    public float segundoNumero;// Almacena el segundo número ingresado
    public String operador;// Almacena el operador seleccionado
    
    public calculadoraa() {
        initComponents();
        initComponents();
        this.setLocationRelativeTo(null);// Establece la ubicación de la calculadora en el centro de la pantalla
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mostrarInfo = new javax.swing.JLabel();
        pantalla = new javax.swing.JTextField();
        retroceder = new javax.swing.JButton();
        siete = new javax.swing.JButton();
        cuatro = new javax.swing.JButton();
        uno = new javax.swing.JButton();
        cero = new javax.swing.JButton();
        parenabre = new javax.swing.JButton();
        ocho = new javax.swing.JButton();
        cinco = new javax.swing.JButton();
        dos = new javax.swing.JButton();
        coma = new javax.swing.JButton();
        parencierra = new javax.swing.JButton();
        nueve = new javax.swing.JButton();
        seis = new javax.swing.JButton();
        tres = new javax.swing.JButton();
        porcentaje = new javax.swing.JButton();
        mod = new javax.swing.JButton();
        division = new javax.swing.JButton();
        multiplicacion = new javax.swing.JButton();
        menos = new javax.swing.JButton();
        suma = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        raiz = new javax.swing.JButton();
        elevadoalados = new javax.swing.JButton();
        igual = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        mostrarInfo.setBackground(new java.awt.Color(255, 255, 255));
        mostrarInfo.setOpaque(true);

        pantalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pantallaActionPerformed(evt);
            }
        });

        retroceder.setBackground(new java.awt.Color(255, 51, 51));
        retroceder.setText("<=");
        retroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrocederActionPerformed(evt);
            }
        });

        siete.setText("7");
        siete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sieteActionPerformed(evt);
            }
        });

        cuatro.setText("4");
        cuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuatroActionPerformed(evt);
            }
        });

        uno.setText("1");
        uno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unoActionPerformed(evt);
            }
        });

        cero.setText("0");
        cero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceroActionPerformed(evt);
            }
        });

        parenabre.setText("(");
        parenabre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parenabreActionPerformed(evt);
            }
        });

        ocho.setText("8");
        ocho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ochoActionPerformed(evt);
            }
        });

        cinco.setText("5");
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });

        dos.setText("2");
        dos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosActionPerformed(evt);
            }
        });

        coma.setText(",");
        coma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comaActionPerformed(evt);
            }
        });

        parencierra.setText(")");
        parencierra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parencierraActionPerformed(evt);
            }
        });

        nueve.setText("9");
        nueve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nueveActionPerformed(evt);
            }
        });

        seis.setText("6");
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });

        tres.setText("3");
        tres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresActionPerformed(evt);
            }
        });

        porcentaje.setText("%");
        porcentaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porcentajeActionPerformed(evt);
            }
        });

        mod.setText("mod");
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });

        division.setText("÷");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        multiplicacion.setText("x");
        multiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicacionActionPerformed(evt);
            }
        });

        menos.setText("-");
        menos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menosActionPerformed(evt);
            }
        });

        suma.setText("+");
        suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumaActionPerformed(evt);
            }
        });

        pi.setText("π");
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        raiz.setText("√");
        raiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raizActionPerformed(evt);
            }
        });

        elevadoalados.setText("x²");
        elevadoalados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevadoaladosActionPerformed(evt);
            }
        });

        igual.setBackground(new java.awt.Color(51, 255, 51));
        igual.setText("=");
        igual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(mostrarInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pantalla, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(uno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cuatro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(siete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cero, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cinco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ocho, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parenabre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coma, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(porcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parencierra, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nueve, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tres, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mod, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menos, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suma, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(elevadoalados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(raiz, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(pi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(igual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mostrarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pantalla, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(retroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parenabre, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(siete, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ocho, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cuatro, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cinco, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(elevadoalados, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mod, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parencierra, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nueve, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(raiz, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uno, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dos, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tres, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menos, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coma, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(porcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suma, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(igual, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//metodo para borrar en pantalla
    private void retrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrocederActionPerformed
    // Obtener el texto actual en la pantalla
    String textoPantalla = pantalla.getText();
    // Verificar si hay texto para borrar
    if (!textoPantalla.isEmpty()) {
        // Eliminar el último carácter del texto actual en la pantalla
        String nuevoTextoPantalla = textoPantalla.substring(0, textoPantalla.length() - 1);
        
        // Actualizar la pantalla con el nuevo texto
        pantalla.setText(nuevoTextoPantalla);
        
        // Actualizar mostrarInfo con el mismo texto que la pantalla
        mostrarInfo.setText(nuevoTextoPantalla);
       }
    }//GEN-LAST:event_retrocederActionPerformed
//metodo para realizar la multiplicacion
    private void multiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicacionActionPerformed
         //this.pantalla.setText(this.pantalla.getText()+"x");
       primerNumero = Float.parseFloat(pantalla.getText());
       operador="*";
       pantalla.setText("");
    }//GEN-LAST:event_multiplicacionActionPerformed

    private void pantallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pantallaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pantallaActionPerformed
//metodo para agregar el parentesis abierto
    private void parenabreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parenabreActionPerformed
       //this.pantalla.setText(this.pantalla.getText()+"(");
           String textoPantalla = this.pantalla.getText();
    int longitudTexto = textoPantalla.length();
    // Verificar si la pantalla está vacía o si el último carácter es un operador
    if (longitudTexto == 0 || "+-*/(".contains(String.valueOf(textoPantalla.charAt(longitudTexto - 1)))) {
        // Agregar un paréntesis abierto
        this.pantalla.setText(textoPantalla + "(");
    } else {
        // Agregar un operador de multiplicación y un paréntesis abierto
        this.pantalla.setText(textoPantalla + "*(");
     }
    }//GEN-LAST:event_parenabreActionPerformed
//metodo para el parentesis cerrado
    private void parencierraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parencierraActionPerformed
          //this.pantalla.setText(this.pantalla.getText()+")");
         String textoPantalla = this.pantalla.getText();
    int longitudTexto = textoPantalla.length();

// Verificar si la pantalla está vacía o si el último carácter es un dígito o paréntesis abierto
    if (longitudTexto == 0 || Character.isDigit(textoPantalla.charAt(longitudTexto - 1)) || textoPantalla.charAt(longitudTexto - 1) == '(') {
        // Agregar un paréntesis cerrado
        this.pantalla.setText(textoPantalla + ")");    
      }
    }//GEN-LAST:event_parencierraActionPerformed
//metodo para la operacion mod
    private void modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modActionPerformed
           //this.pantalla.setText(this.pantalla.getText()+"mod");
           // Guarda el número mostrado en pantalla como el primer número y establece el operador como módulo
           primerNumero = Float.parseFloat(pantalla.getText());
           operador = "mod";
           pantalla.setText("");
    }//GEN-LAST:event_modActionPerformed
//metodo para gregar el valor de pi 
    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
           //this.pantalla.setText(this.pantalla.getText()+"π");
           double piValue = Math.PI;
           this.pantalla.setText(String.valueOf(piValue));
    }//GEN-LAST:event_piActionPerformed
//metodo para agregar el numero 7 a la pantalla
    private void sieteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sieteActionPerformed
       this.pantalla.setText(this.pantalla.getText()+"7");
    }//GEN-LAST:event_sieteActionPerformed
//metodo para agregar el numero 8 a la poantalla
    private void ochoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ochoActionPerformed
           this.pantalla.setText(this.pantalla.getText()+ "8");
    }//GEN-LAST:event_ochoActionPerformed
//metodo para agregar el numero 9 a la pantalla
    private void nueveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nueveActionPerformed
           this.pantalla.setText(this.pantalla.getText()+ "9");
    }//GEN-LAST:event_nueveActionPerformed
//metodo para realizar la division 
    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
         //this.pantalla.setText(this.pantalla.getText()+ "÷");
         primerNumero = Float.parseFloat(pantalla.getText());
         operador = "/";
         pantalla.setText("");
    }//GEN-LAST:event_divisionActionPerformed
//metodo para calcular la raiz cuadrada
    private void raizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raizActionPerformed
          //this.pantalla.setText(this.pantalla.getText()+"√");
          double primerNumero = Double.parseDouble(pantalla.getText());
          double resultado = Math.sqrt(primerNumero);
          //verificar si el resultado tiene decimales 
          if (resultado % 1 == 0){
          }else{
          //si tiene decimales, mostrarlo como un numero de punto flotante
          pantalla.setText(String.valueOf(resultado));
          mostrarInfo.setText("La raiz cuadra es " + pantalla.getText());
          }
    }//GEN-LAST:event_raizActionPerformed
//metodo para agregar el numero 4 a la pantalla
    private void cuatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuatroActionPerformed
          this.pantalla.setText(this.pantalla.getText() + "4");
    }//GEN-LAST:event_cuatroActionPerformed
//metodo para agregar el numero 5 a la pantalla
    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoActionPerformed
          this.pantalla.setText(this.pantalla.getText() + "5");
    }//GEN-LAST:event_cincoActionPerformed
//metodo para agregar el numero 6 a la pantalla
    private void seisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seisActionPerformed
          this.pantalla.setText(this.pantalla.getText() + "6");
    }//GEN-LAST:event_seisActionPerformed
//metodo para elevar al cuadrado
    private void elevadoaladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevadoaladosActionPerformed
          //this.pantalla.setText(this.pantalla.getText() + "x²");
         //obtener el numero actual en la pantalla
         String textoPantalla = pantalla.getText();
         double numero = Double.parseDouble(textoPantalla);
         double resultado = Math.pow(numero, 2);
         //verificar si el resultado tiene decimales 
         if (resultado % 1 == 0){
             //sies un numero entero,mostrarlo como un numero entero
             pantalla.setText(String.valueOf((int) resultado));
             mostrarInfo.setText("Elevado al cuadrado es " + pantalla.getText());
        }else{
             //si tiene decimales, mostrarlo como un numero de punto flotante
             pantalla.setText(String.valueOf(resultado));
         }
    }//GEN-LAST:event_elevadoaladosActionPerformed
//metodo para agregar el numero 1 a la pantalla
    private void unoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unoActionPerformed
        this.pantalla.setText(this.pantalla.getText() + "1");
    }//GEN-LAST:event_unoActionPerformed
//metodo para agregar el numero 2 a la pantalla
    private void dosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dosActionPerformed
        this.pantalla.setText(this.pantalla.getText() + "2");
    }//GEN-LAST:event_dosActionPerformed
//metodo para agregar el numero 3 a la pantalla
    private void tresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresActionPerformed
        this.pantalla.setText(this.pantalla.getText() + "3");
    }//GEN-LAST:event_tresActionPerformed
//metodo para realizar la resta 
    private void menosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menosActionPerformed
        //this.pantalla.setText(this.pantalla.getText() + "-");
        primerNumero = Float.parseFloat(pantalla.getText());
        operador = "-";
        pantalla.setText("");
    }//GEN-LAST:event_menosActionPerformed
//metodo para agregar el 0 a la pantalla
    private void ceroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ceroActionPerformed
        this.pantalla.setText(this.pantalla.getText() + "0");
    }//GEN-LAST:event_ceroActionPerformed
//metodo para agregar la coma "," a la pantalla
    private void comaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comaActionPerformed
        //this.pantalla.setText(this.pantalla.getText() + ",");
        String textoPantalla = this.pantalla.getText();
        //verificar si ya hay una coma presente en el numero actual
        if (!textoPantalla.contains(".")){
            this.pantalla.setText(textoPantalla + ".");
        }
    }//GEN-LAST:event_comaActionPerformed
//metodo para calcular el porcentaje
    private void porcentajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porcentajeActionPerformed
        //this.pantalla.setText(this.pantalla.getText() + "%");
        primerNumero = Float.parseFloat(pantalla.getText());
        float resultado = primerNumero / 100;
        pantalla.setText(String.valueOf(resultado));
        mostrarInfo.setText("El porcentaje es " + pantalla.getText());
    }//GEN-LAST:event_porcentajeActionPerformed
//metodo para realizar la suma
    private void sumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumaActionPerformed
        //this.pantalla.setText(this.pantalla.getText() + "+");
        primerNumero = Float.parseFloat(pantalla.getText());
        operador = "+";
        pantalla.setText("");
    }//GEN-LAST:event_sumaActionPerformed
// metodo para el igual
    private void igualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualActionPerformed
        //this.pantalla.setText(this.pantalla.getText() + "=");
        //metodo para realizar la operacion seleccionada
        segundoNumero = Float.parseFloat(pantalla.getText());
        float resultado = 0;
        //realiza la operacion de acuerdo al operador seleccionado
        switch(operador){
            case"+":
                resultado = primerNumero + segundoNumero;
                mostrarInfo.setText(primerNumero + " + " + segundoNumero + " = " + resultado);
                break;
                
                case"-":
                resultado = primerNumero - segundoNumero;
                mostrarInfo.setText(primerNumero + " - " + segundoNumero + " = " + resultado);
                break;
                
                case"*":
                resultado = primerNumero * segundoNumero;
                mostrarInfo.setText(primerNumero + " * " + segundoNumero + " = " + resultado);
                break;
                
                case"mod":
                resultado = primerNumero % segundoNumero;
                mostrarInfo.setText(primerNumero + " % " + segundoNumero + " = " + resultado);
                break;
               
                case"/":
                if(segundoNumero !=0){
                resultado = primerNumero / segundoNumero;
                mostrarInfo.setText(primerNumero + " / " + segundoNumero + " = " + resultado);
                }else{
                    pantalla.setText("Error: Division por cero");
                    mostrarInfo.setText("");
                    return;
                }
                break;
                default:
                    pantalla.setText("Operacion desconocida");
                    mostrarInfo.setText("");
        }
        //comprueba si el resultado es un numero entero o tiene decimales 
        if (resultado % 1 == 0){
            pantalla.setText(String.valueOf((int)resultado));
        }else{
            //si el resultado tiene decimales, lo muestra como un numero flotante
            pantalla.setText(String.valueOf(resultado));
        }
    }//GEN-LAST:event_igualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculadoraa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculadoraa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculadoraa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculadoraa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculadoraa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cero;
    private javax.swing.JButton cinco;
    private javax.swing.JButton coma;
    private javax.swing.JButton cuatro;
    private javax.swing.JButton division;
    private javax.swing.JButton dos;
    private javax.swing.JButton elevadoalados;
    private javax.swing.JButton igual;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton menos;
    private javax.swing.JButton mod;
    private javax.swing.JLabel mostrarInfo;
    private javax.swing.JButton multiplicacion;
    private javax.swing.JButton nueve;
    private javax.swing.JButton ocho;
    private javax.swing.JTextField pantalla;
    private javax.swing.JButton parenabre;
    private javax.swing.JButton parencierra;
    private javax.swing.JButton pi;
    private javax.swing.JButton porcentaje;
    private javax.swing.JButton raiz;
    private javax.swing.JButton retroceder;
    private javax.swing.JButton seis;
    private javax.swing.JButton siete;
    private javax.swing.JButton suma;
    private javax.swing.JButton tres;
    private javax.swing.JButton uno;
    // End of variables declaration//GEN-END:variables
}
